%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Mon Jul 10 07:38:06 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGAGCACAUAUUAACAUGAGGAUCACCCAUGUCAAAAGACAUGAGGAUAUGGAUCCGAAAAGGAUCUAGAAGGCAUGGUGCUCC\
) def
/coor [
[92.50000000 204.26370239]
[92.50000000 189.26370239]
[92.50000000 174.26370239]
[92.50000000 159.26370239]
[92.50000000 144.26370239]
[92.50000000 129.26370239]
[92.50000000 114.26369476]
[89.28650665 128.91543579]
[77.07760620 137.62994385]
[62.17678070 135.90791321]
[52.27735901 124.63842773]
[52.49043655 109.63993835]
[62.70599747 98.65621185]
[77.65169525 97.35872650]
[62.77702713 95.42373657]
[47.90235519 93.48875427]
[33.02768707 91.55376434]
[18.15301704 89.61877441]
[8.99200726 91.64385986]
[2.76832223 87.32759094]
[-12.02468872 84.84428406]
[-27.19066429 91.08329010]
[-40.00978851 80.85577393]
[-37.29484558 64.68292236]
[-21.83873558 59.20198059]
[-9.54138088 70.05126953]
[5.25163031 72.53457642]
[20.08800507 74.74410248]
[34.96267319 76.67909241]
[49.83734512 78.61408234]
[64.71201324 80.54907227]
[79.58668518 82.48405457]
[73.63285065 68.71627808]
[76.72367096 54.03816986]
[87.72399902 43.84048843]
[102.59381104 41.86847687]
[115.87194061 48.84638977]
[122.68180847 62.21148300]
[120.52238464 77.05522919]
[110.18617249 87.92636871]
[124.07073975 82.25020599]
[137.95530701 76.57403564]
[151.83987427 70.89787292]
[152.18025208 56.64214706]
[157.95268250 43.65068054]
[168.24087524 33.90317535]
[181.44323730 28.87088203]
[195.52214050 29.29460526]
[208.31845093 35.07583237]
[217.88258362 45.29699326]
[231.96740723 40.13776016]
[246.05223083 34.97852707]
[260.13705444 29.81929398]
[274.22189331 24.66005898]
[288.30670166 19.50082588]
[302.39154053 14.34159184]
[310.41897583 0.45132208]
[326.30462646 -1.79042304]
[337.86239624 9.33603191]
[336.22610474 25.29542351]
[322.65103149 33.84506989]
[307.55078125 28.42641830]
[293.46594238 33.58565140]
[279.38110352 38.74488449]
[265.29629517 43.90411758]
[251.21147156 49.06335449]
[237.12663269 54.22258759]
[223.04180908 59.38182068]
[221.82949829 75.20334625]
[213.85955811 88.99118042]
[200.65930176 98.00328827]
[184.80183411 100.42252350]
[169.40449524 95.72277832]
[157.51603699 84.78244019]
[143.63146973 90.45860291]
[129.74690247 96.13477325]
[115.86234283 101.81093597]
[107.50000000 114.26369476]
[107.50000000 129.26370239]
[107.50000000 144.26370239]
[107.50000000 159.26370239]
[107.50000000 174.26370239]
[107.50000000 189.26370239]
[107.50000000 204.26370239]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[20 27]
[21 26]
[40 77]
[41 76]
[42 75]
[43 74]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
