%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Tue Aug 29 04:41:43 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGUGACGUGUAGGAUAUGGAGGUGGGUUUUGGCCAGAAGGACAUGAGGAUCACCCAUGUGGUAGAGGGUUGGCGGUGGCCCGU\
) def
/coor [
[77.73993683 194.76260376]
[65.44357300 203.35327148]
[50.44357681 203.35812378]
[38.14164734 194.77543640]
[32.96788788 180.69593811]
[36.78464508 166.19111633]
[23.35719681 172.87719727]
[14.45260143 185.95460510]
[-0.38919684 184.70149231]
[-9.29379272 197.77890015]
[-24.13559151 196.52578735]
[-37.56304169 203.21186829]
[-44.00419998 217.90510559]
[-59.54425049 221.89086914]
[-72.26219940 212.11163330]
[-72.40191650 196.06918335]
[-59.85623169 186.06993103]
[-44.24911499 189.78442383]
[-30.82166672 183.09834290]
[-22.87749100 170.49916077]
[-7.07527208 171.27404785]
[0.86890292 158.67486572]
[16.67112160 159.44973755]
[30.09857178 152.76367188]
[42.39468002 144.17263794]
[53.29118347 133.86408997]
[64.18768311 123.55554199]
[75.08419037 113.24699402]
[85.98069000 102.93843842]
[90.15605927 89.59460449]
[103.71075439 86.16505432]
[108.41831207 71.06044006]
[122.98118591 67.93442535]
[133.87768555 57.62587357]
[144.77418518 47.31732178]
[155.67070007 37.00877380]
[166.56719971 26.70022202]
[160.82174683 8.03861046]
[164.94764709 -10.97024918]
[177.81367493 -25.45921898]
[196.06037903 -31.75518036]
[214.97702026 -28.31004333]
[223.79379272 -40.44529724]
[232.61058044 -52.58055496]
[241.42735291 -64.71580505]
[250.24412537 -76.85106659]
[252.84959412 -85.86419678]
[259.61773682 -89.26371765]
[268.87689209 -101.06488800]
[270.65563965 -117.36728668]
[285.77032471 -123.72953033]
[298.67227173 -113.60669708]
[296.08905029 -97.41228485]
[280.67807007 -91.80571747]
[271.41891479 -80.00453949]
[262.37939453 -68.03428650]
[253.56260681 -55.89902878]
[244.74583435 -43.76377487]
[235.92904663 -31.62851906]
[227.11227417 -19.49326515]
[233.39196777 -10.37487888]
[236.77528381 0.18963608]
[236.96168518 11.30260944]
[233.92286682 22.01599312]
[227.90615845 31.41223717]
[219.41453552 38.68287659]
[209.16447449 43.19808197]
[198.02560425 44.56121445]
[186.94688416 42.64363098]
[176.87574768 37.59672546]
[165.97924805 47.90527725]
[155.08273315 58.21382523]
[144.18623352 68.52237701]
[133.28973389 78.83092499]
[129.36157227 93.19821167]
[114.01931000 97.06156158]
[109.84394073 110.40539551]
[96.28924561 113.83494568]
[85.39273834 124.14349365]
[74.49623871 134.45204163]
[63.59973145 144.76058960]
[52.70322800 155.06915283]
[67.63722992 156.47474670]
[79.07762146 166.17616272]
] def
/pairs [
[6 24]
[7 23]
[9 21]
[11 19]
[12 18]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[31 76]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[48 55]
[49 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
