%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Tue Aug 29 00:02:11 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGAUUUUGUAAGGAUAUACUCGAGUUUUAAGAGUAGAAGGUACUUACAUGAGGAUCACCCAUGUCUAACGUAAUACUAGUCGC\
) def
/coor [
[111.38473511 202.19042969]
[111.38473511 187.19042969]
[111.38473511 172.19042969]
[111.38473511 157.19042969]
[111.38473511 142.19042969]
[111.38473511 127.19042206]
[92.50417328 126.27258301]
[79.49620819 114.58895874]
[77.02845001 98.71149445]
[63.14388657 93.03533173]
[49.25931931 87.35916138]
[39.02967453 97.29374695]
[25.80932045 102.52074432]
[11.63901615 102.26934814]
[-1.30765367 96.61162567]
[-11.05766773 86.44637299]
[-16.13924408 73.35646057]
[-15.80394459 59.36244965]
[-29.46928406 53.17710495]
[-43.13462448 46.99176025]
[-56.79996490 40.80641556]
[-70.46530151 34.62107086]
[-83.35935974 43.09142685]
[-98.78615570 43.22323608]
[-111.82306671 34.97444916]
[-118.31005859 20.97721481]
[-116.17714691 5.69800520]
[-106.10494995 -5.98764133]
[-91.30745697 -10.35087681]
[-76.50650787 -5.99940968]
[-66.42501831 5.67822361]
[-64.27996063 20.95573235]
[-50.61462021 27.14107704]
[-36.94927979 33.32642365]
[-23.28393936 39.51176834]
[-9.61859989 45.69711304]
[2.33017612 35.25598145]
[17.67657852 31.00013733]
[33.40978622 33.81634521]
[46.42061615 43.19879913]
[54.11594772 57.33908463]
[54.93548584 73.47460175]
[68.82005310 79.15076447]
[82.70462036 84.82692719]
[97.43019104 74.96723938]
[116.44873047 78.18543243]
[129.02044678 94.82843781]
[141.62561035 86.69763184]
[154.23077393 78.56683350]
[166.83593750 70.43603516]
[179.44108582 62.30523300]
[185.12654114 54.84193802]
[192.66567993 54.11691666]
[205.56268311 46.45744705]
[213.11041260 31.89846802]
[229.50274658 31.42590523]
[237.87666321 45.52589035]
[229.61778259 59.69356537]
[213.22215271 59.35444641]
[200.32514954 67.01391602]
[187.57189941 74.91039276]
[174.96673584 83.04119873]
[162.36157227 91.17199707]
[149.75640869 99.30279541]
[137.15124512 107.43359375]
[149.83717346 99.42938995]
[164.65068054 97.07139587]
[179.19483948 100.74115753]
[191.11634827 109.84487915]
[198.48622131 122.90953064]
[200.11196899 137.82116699]
[195.73052979 152.16700745]
[186.05085754 163.62579346]
[172.63917542 170.34344482]
[157.66557312 171.23300171]
[143.55287170 166.15052795]
[132.58457947 155.91838074]
[126.53544617 142.19221497]
[126.38473511 127.19042206]
[126.38473511 142.19042969]
[126.38473511 157.19042969]
[126.38473511 172.19042969]
[126.38473511 187.19042969]
[126.38473511 202.19042969]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[9 44]
[10 43]
[11 42]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[53 60]
[54 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
