%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Sat Jul  8 20:02:06 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCAUCACAUGAGGAUAUGCUCCCGUUUCGGGAGCAGAAGGCGUGUCAUAAGACAUGAGGAUCACCCAUGUAGUUAAGAUGGCA\
) def
/coor [
[96.02102661 195.36138916]
[95.46675873 180.37162781]
[94.91248322 165.38186646]
[94.35820770 150.39212036]
[93.80393982 135.40235901]
[93.24966431 120.41260529]
[84.65863800 108.11650085]
[70.77407074 102.44033051]
[56.88951111 96.76416779]
[43.00494385 91.08800507]
[29.12038040 85.41183472]
[18.89073181 95.34641266]
[5.67037964 100.57341766]
[-8.49992561 100.32201385]
[-21.44659424 94.66429901]
[-31.19660950 84.49903870]
[-36.27818680 71.40913391]
[-35.94288635 57.41512299]
[-49.60822678 51.22977829]
[-63.27356339 45.04443359]
[-76.93890381 38.85908890]
[-90.60424805 32.67374420]
[-104.26958466 26.48839951]
[-117.93492126 20.30305481]
[-131.60026550 14.11770916]
[-148.52331543 13.09469509]
[-152.22505188 -3.45019817]
[-137.35148621 -11.58734894]
[-125.41491699 0.45236966]
[-111.74958038 6.63771439]
[-98.08423615 12.82305908]
[-84.41889954 19.00840378]
[-70.75356293 25.19374847]
[-57.08821869 31.37909317]
[-43.42288208 37.56443787]
[-29.75754166 43.74978256]
[-17.80876541 33.30865479]
[-2.46236277 29.05280876]
[13.27084446 31.86901665]
[26.28167343 41.25146866]
[33.97700500 55.39175797]
[34.79654694 71.52726746]
[48.68111038 77.20343781]
[62.56567383 82.87960052]
[76.45024109 88.55577087]
[90.33480835 94.23193359]
[91.20364380 90.29721069]
[93.63565063 86.48602295]
[97.59501648 83.39458466]
[102.82801056 81.59629059]
[108.87718201 81.56526947]
[115.12132263 83.60739899]
[120.83781433 87.80720520]
[135.71247864 85.87221527]
[150.58715820 83.93722534]
[165.46182251 82.00223541]
[180.33650208 80.06724548]
[188.67451477 75.76578522]
[195.79534912 78.34611511]
[210.73135376 76.96208954]
[223.79638672 67.05062103]
[238.80549622 73.65806580]
[240.31861877 89.98725891]
[226.77917480 99.24011993]
[212.11538696 91.89810181]
[197.17936707 93.28212738]
[182.27148438 94.94191742]
[167.39682007 96.87690735]
[152.52214050 98.81189728]
[137.64747620 100.74688721]
[122.77280426 102.68186951]
[137.73806763 103.70208740]
[148.15591431 114.49414062]
[148.64758301 129.48608398]
[138.95922852 140.93753052]
[124.09295654 142.93608093]
[111.72427368 134.44987488]
[108.23942566 119.85833740]
[108.79369354 134.84808350]
[109.34796906 149.83784485]
[109.90223694 164.82760620]
[110.45651245 179.81735229]
[111.01078796 194.80711365]
[113.91172791 213.97047424]
] def
/pairs [
[1 83]
[2 82]
[3 81]
[4 80]
[5 79]
[6 78]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
