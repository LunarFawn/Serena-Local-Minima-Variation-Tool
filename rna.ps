%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Mon Jul 10 21:36:02 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGCGUACAAGCAAACAUGAGGAUCACCCAUGUGGUCUCAUGCGAGGAUAUCGGGAAGGAGGAUUCCGAGAAGGUGCGGUGAGCC\
) def
/coor [
[100.54743195 115.17632294]
[93.61437225 128.47792053]
[86.68131256 141.77952576]
[91.66448975 156.77764893]
[84.50827026 170.86892700]
[69.45830536 175.69325256]
[55.44347763 168.38844299]
[50.77853394 153.28833008]
[58.23110199 139.35151672]
[73.37970734 134.84648132]
[80.31276703 121.54486847]
[87.24582672 108.24326324]
[83.04030609 98.07237244]
[86.79808044 86.40323639]
[71.92340851 84.46825409]
[57.04874039 82.53326416]
[42.17406845 80.59827423]
[27.29939842 78.66328430]
[18.13839149 80.68836975]
[11.91470528 76.37210083]
[-2.87830615 73.88879395]
[-18.04428101 80.12780762]
[-30.86340523 69.90029144]
[-28.14846230 53.72743607]
[-12.69235325 48.24649429]
[-0.39499792 59.09578323]
[14.39801311 61.57909012]
[29.23438835 63.78861618]
[44.10905838 65.72360229]
[58.98372650 67.65859222]
[73.85839844 69.59358215]
[88.73307037 71.52857208]
[103.60774231 69.59358215]
[117.49230194 63.91741562]
[124.45231628 57.62589264]
[131.99632263 58.29853058]
[146.08114624 53.13929749]
[160.16596985 47.98006058]
[174.25079346 42.82082748]
[188.33561707 37.66159439]
[202.32270813 32.24296951]
[216.20727539 26.56680489]
[230.09182739 20.89063835]
[230.43222046 6.63491297]
[236.20465088 -6.35655355]
[246.49284363 -16.10406113]
[259.69519043 -21.13635254]
[273.77410889 -20.71262932]
[286.57040405 -14.93140125]
[296.13455200 -4.71024036]
[310.21936035 -9.86947441]
[324.30419922 -15.02870750]
[338.38900757 -20.18794250]
[352.47384644 -25.34717560]
[366.55868530 -30.50640869]
[371.70635986 -45.27243042]
[385.16751099 -53.23053360]
[400.58618164 -50.62314987]
[410.68215942 -38.68140411]
[410.68841553 -23.04382133]
[400.60202026 -11.09399223]
[385.18542480 -8.47426033]
[371.71789551 -16.42158318]
[357.63308716 -11.26235008]
[343.54824829 -6.10311604]
[329.46343994 -0.94388241]
[315.37860107 4.21535158]
[301.29379272 9.37458515]
[300.08148193 25.19611168]
[292.11151123 38.98394394]
[278.91128540 47.99605560]
[263.05380249 50.41528702]
[247.65644836 45.71554565]
[235.76800537 34.77520370]
[221.88343811 40.45137024]
[207.99887085 46.12753296]
[202.87693787 51.70698166]
[193.49485779 51.74642181]
[179.41003418 56.90565491]
[165.32521057 62.06488800]
[151.24037170 67.22412109]
[137.15554810 72.38335419]
[123.16847229 77.80197906]
[109.28390503 83.47814941]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[20 27]
[21 26]
[33 84]
[34 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[41 76]
[42 75]
[43 74]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
