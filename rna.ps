%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Tue Aug 29 01:55:37 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUCAUCAAUGAAGGAUAUCUAUAUCCAACAUGAGGAUCACCCAUGUUGAGGAUCACCUAUGUAAAGGAGAAGGUUAAUAUAACU\
) def
/coor [
[67.32758331 128.22055054]
[60.39452362 141.52215576]
[53.46146774 154.82376099]
[46.52840805 168.12536621]
[47.77551651 184.47702026]
[34.08724213 193.50825500]
[19.54491043 185.92851257]
[19.10842323 169.53517151]
[33.22680283 161.19230652]
[40.15986252 147.89070129]
[47.09291840 134.58909607]
[54.02597809 121.28749084]
[45.43495178 108.99137878]
[30.56027985 110.92636871]
[15.68560982 112.86135864]
[0.81093961 114.79634857]
[-14.06373119 116.73133087]
[-26.75358582 127.11880493]
[-41.99660873 121.07048035]
[-44.11208725 104.80835724]
[-30.92379570 95.06150818]
[-15.99871922 101.85666656]
[-1.12404859 99.92167664]
[13.75062180 97.98668671]
[28.62529182 96.05169678]
[43.49996185 94.11670685]
[50.91979980 81.08037567]
[44.98803329 67.30307007]
[39.05626297 53.52576828]
[33.12449646 39.74846268]
[27.19272804 25.97115707]
[21.26095963 12.19385242]
[14.84189892 5.35128832]
[15.37501526 -2.20385551]
[9.95639038 -16.19093895]
[-3.15212965 -26.04480743]
[-0.90435678 -42.28917694]
[14.38739300 -48.21323395]
[26.99227905 -37.72281265]
[23.94347382 -21.60956383]
[29.36209869 -7.62248039]
[35.03826523 6.26208448]
[40.97003174 20.03938866]
[46.90180206 33.81669235]
[52.83356857 47.59399796]
[58.76533508 61.37130356]
[64.69710541 75.14860535]
[76.45536804 65.64483643]
[90.29862213 61.06549835]
[104.33017731 61.64258194]
[116.75959015 66.92686462]
[126.13103485 75.89182281]
[131.49290466 87.10832977]
[146.28591919 84.62502289]
[158.61471558 74.70981598]
[172.44731140 80.23329926]
[187.24032593 77.74999237]
[202.03332520 75.26668549]
[210.99905396 62.25164032]
[226.55671692 59.47053909]
[239.47624207 68.57335663]
[242.09271240 84.15956116]
[232.85380554 96.98212433]
[217.24081421 99.43365479]
[204.51663208 90.05970001]
[189.72363281 92.54300690]
[174.93061829 95.02631378]
[163.65991211 104.76389313]
[148.76922607 99.41803741]
[133.97621155 101.90134430]
[130.73693848 114.60270691]
[122.93708038 125.13739777]
[130.35691833 138.17373657]
[137.77674866 151.21006775]
[145.19659424 164.24639893]
[152.61642456 177.28274536]
[165.70616150 188.05749512]
[158.97607422 203.61842346]
[142.16020203 201.45904541]
[139.58009338 184.70257568]
[132.16026306 171.66624451]
[124.74041748 158.62991333]
[117.32057953 145.59356689]
[109.90074158 132.55723572]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[34 41]
[35 40]
[53 70]
[54 69]
[56 67]
[57 66]
[58 65]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
