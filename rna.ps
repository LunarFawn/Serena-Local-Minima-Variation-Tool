%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Sat Sep  2 08:46:18 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAGUACUGAGGAUAUACAUGAGGAUCACCCAUGUGUUCCUUGUAGGAUAUGCGCAAAAGUAGAAGGCAGAAGGAGAUGUGCCUA\
) def
/coor [
[80.88395691 138.39018250]
[68.04323578 128.60060120]
[59.73254395 114.75672913]
[57.12997437 98.82102203]
[42.43882751 95.79278564]
[27.74768066 92.76454926]
[18.46213150 94.10753632]
[12.57420921 89.34342194]
[-1.99500620 85.77439117]
[-16.56422234 82.20536804]
[-31.13343620 78.63633728]
[-45.70265198 75.06730652]
[-55.03148651 76.06626129]
[-60.73934555 71.08783722]
[-75.16673279 66.98289490]
[-89.59411621 62.87794876]
[-104.02149963 58.77300262]
[-118.44888306 54.66805649]
[-132.87626648 50.56311417]
[-147.30364990 46.45816803]
[-156.66302490 47.11172867]
[-162.18302917 41.92578506]
[-176.44888306 37.29053116]
[-192.36843872 41.22750854]
[-203.54118347 29.22327995]
[-198.47357178 13.62676334]
[-182.37870789 10.48231983]
[-171.81362915 23.02468300]
[-157.54777527 27.65993690]
[-143.19871521 32.03078461]
[-128.77131653 36.13572693]
[-114.34394073 40.24067307]
[-99.91655731 44.34561920]
[-85.48916626 48.45056152]
[-71.06178284 52.55550766]
[-56.63439941 56.66045380]
[-42.13362503 60.49809265]
[-27.56440926 64.06712341]
[-12.99519348 67.63614655]
[1.57402170 71.20517731]
[16.14323807 74.77420807]
[30.77591705 78.07340240]
[45.46706390 81.10163879]
[60.15821075 84.12987518]
[67.43618011 72.09252930]
[78.21739960 63.05751038]
[91.34202576 57.99680328]
[105.39807892 57.45484924]
[118.87340546 61.48995209]
[130.31829834 69.66801453]
[142.61441040 61.07698441]
[154.91052246 52.48595810]
[157.42375183 36.88277817]
[170.28274536 27.69464111]
[185.85848999 30.37270164]
[194.91015625 43.32811737]
[192.06756592 58.87466812]
[179.01718140 67.78886414]
[163.50154114 64.78206635]
[151.20544434 73.37309265]
[138.90933228 81.96411896]
[142.63763428 95.38903046]
[141.86558533 109.30062103]
[136.67468262 122.23054504]
[147.94465637 132.12940979]
[159.21463013 142.02828979]
[170.48461914 151.92715454]
[181.75459290 161.82601929]
[197.22914124 165.11981201]
[201.68550110 179.33213806]
[217.43856812 178.06063843]
[229.42243958 188.36415100]
[230.52729797 204.12977600]
[220.09765625 216.00404358]
[204.32124329 216.94216919]
[192.55790710 206.38757324]
[191.78663635 190.60211182]
[177.11819458 188.01635742]
[171.85572815 173.09599304]
[160.58573914 163.19712830]
[149.31576538 153.29826355]
[138.04579163 143.39939880]
[126.77581024 133.50051880]
[112.49044037 141.02703857]
] def
/pairs [
[4 44]
[5 43]
[6 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[22 29]
[23 28]
[50 61]
[51 60]
[52 59]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[70 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
