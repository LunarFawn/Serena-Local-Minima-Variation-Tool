%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Sun Jul 23 04:25:30 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGCGAAUGCAAGGAUAUGUCACAUAAACUGGAACAGAAGGUGCUGCUGAACAUGAGGAUCACCCAUGUACUUGACCGGCAACU\
) def
/coor [
[111.43202972 169.16279602]
[96.96921539 173.14112854]
[82.17617798 170.65797424]
[69.80506134 162.17530823]
[62.15742493 149.27130127]
[60.65606689 134.34661865]
[65.58029938 120.17792511]
[76.01399994 109.40119934]
[90.01678467 104.02127075]
[76.13221741 98.34510803]
[62.24765396 92.66893768]
[52.01800537 102.60351562]
[38.79765320 107.83052063]
[24.62734795 107.57911682]
[11.68067837 101.92140198]
[1.93066359 91.75614929]
[-3.15091252 78.66623688]
[-2.81561255 64.67222595]
[-16.48095131 58.48688126]
[-30.14629173 52.30153656]
[-44.78125763 57.63590622]
[-58.55174255 51.16841888]
[-63.54706192 37.18334198]
[-77.21240234 30.99799728]
[-92.67160034 35.28666306]
[-105.57820892 25.75780678]
[-106.03137207 9.72115421]
[-93.68347168 -0.52134699]
[-78.00675201 2.88747239]
[-71.02705383 17.33265877]
[-57.36171722 23.51800346]
[-43.55774689 18.04204750]
[-29.61103821 24.12019920]
[-23.96094704 38.63619614]
[-10.29560757 44.82154083]
[3.36973214 51.00688553]
[15.31850815 40.56575775]
[30.66491127 36.30991364]
[46.39811707 39.12612152]
[59.40894699 48.50857162]
[67.10427856 62.64886093]
[67.92382050 78.78437805]
[81.80838013 84.46054077]
[95.69294739 90.13670349]
[110.48596191 92.62001801]
[125.46291351 91.78884125]
[140.43986511 90.95767212]
[155.41682434 90.12649536]
[170.39376831 89.29532623]
[188.44706726 73.72940063]
[209.74787903 82.83994293]
[224.17526245 78.73499298]
[238.60264587 74.63005066]
[253.03002930 70.52510834]
[267.45739746 66.42015839]
[275.07086182 60.93741989]
[282.49411011 62.44068909]
[297.06332397 58.87166214]
[308.52584839 47.14381027]
[324.34451294 51.46831131]
[328.24645996 67.39649200]
[316.21768188 78.54280090]
[300.63235474 73.44087982]
[286.06314087 77.00990295]
[271.56234741 80.84754944]
[257.13497925 84.95249176]
[242.70758057 89.05743408]
[228.28019714 93.16238403]
[213.85281372 97.26732635]
[212.25735474 104.29206848]
[208.41708374 110.44887543]
[202.72807312 115.03754425]
[195.79870605 117.52296448]
[188.38481140 117.59733582]
[181.30715942 115.21788025]
[175.36062622 110.61539459]
[171.22494507 104.27227783]
[156.24800110 105.10345459]
[141.27104187 105.93462372]
[126.29408264 106.76579285]
[111.31713104 107.59696960]
[122.79513550 117.25386047]
[129.13816833 130.84672546]
[129.16616821 145.84669495]
] def
/pairs [
[9 44]
[10 43]
[11 42]
[18 36]
[19 35]
[20 34]
[23 31]
[24 30]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[57 64]
[58 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
