%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Fri Sep  1 16:47:50 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACAUGAGGAUCACCCAUGUAAAAUGAAGAAGGUAUAUACUUGAGGAUCACCCAUGUACAUGGGAAUAAGGAUAUUCUAAUAAUU\
) def
/coor [
[177.72822571 154.88539124]
[164.83122253 147.22592163]
[151.93423462 139.56646729]
[139.03723145 131.90699768]
[126.14023590 124.24752808]
[111.24642181 124.40111542]
[103.33193970 110.70178223]
[90.29560852 103.28194427]
[77.12438965 96.10427094]
[63.95317078 88.92659760]
[50.78195190 81.74892426]
[41.50802231 80.32791901]
[37.26382065 74.05487061]
[21.44752884 73.66059875]
[14.45552921 60.50912857]
[1.55853164 52.84965897]
[-14.25776100 52.45539093]
[-21.24976158 39.30392075]
[-34.14675903 31.64445114]
[-47.04375839 23.98498344]
[-58.75914764 33.60399628]
[-73.05893707 38.63308334]
[-88.21636200 38.46496201]
[-102.40109253 33.11992645]
[-113.90023804 23.24342155]
[-121.32523346 10.02808094]
[-123.77947235 -4.93027878]
[-120.96659851 -19.82536316]
[-113.22626495 -32.85851669]
[-101.49316406 -42.45592117]
[-87.18412781 -47.45864868]
[-72.02703857 -47.26259232]
[-57.85219193 -41.89142609]
[-46.37126160 -31.99374771]
[-38.97063065 -18.76474571]
[-36.54396439 -3.80188894]
[-39.38428879 11.08798504]
[-26.48729134 18.74745369]
[-13.59029293 26.40692139]
[1.30352032 26.25333405]
[9.21799946 39.95266342]
[22.11499786 47.61212921]
[37.00881195 47.45854187]
[44.92329025 61.15787125]
[57.95962524 68.57770538]
[71.13084412 75.75537872]
[84.30206299 82.93305206]
[97.47328186 90.11072540]
[105.70375061 90.93785095]
[110.99140930 97.80478668]
[126.80770111 98.19905853]
[133.79969788 111.35052490]
[146.69670105 119.00999451]
[159.59370422 126.66946411]
[172.49069214 134.32893372]
[185.38769531 141.98840332]
[199.76220703 131.72085571]
[217.09732056 128.60179138]
[234.04997253 133.18801880]
[247.36996460 144.55464172]
[254.52308655 160.48124695]
[254.17321777 177.88552856]
[267.83856201 184.07086182]
[281.50390625 190.25621033]
[295.16925049 196.44155884]
[308.83459473 202.62690735]
[322.49990845 208.81224060]
[338.75735474 206.66098022]
[348.53320312 219.82778931]
[341.77090454 234.76779175]
[325.42694092 236.11198425]
[316.31457520 222.47758484]
[302.64923096 216.29223633]
[288.98388672 210.10690308]
[275.31857300 203.92155457]
[261.65322876 197.73620605]
[247.98788452 191.55085754]
[239.21255493 200.61785889]
[228.01167297 206.48171997]
[215.51139832 208.53527832]
[202.97407532 206.55529785]
[191.67079163 200.72673035]
[182.75247192 191.62547302]
[177.13270569 180.16154480]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[7 50]
[8 48]
[9 47]
[10 46]
[11 45]
[13 44]
[15 42]
[16 41]
[18 39]
[19 38]
[20 37]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
