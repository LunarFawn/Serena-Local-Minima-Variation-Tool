%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Mon Sep  4 01:28:39 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCAUCGCAUGAGGAUAUGCUCCCGUUUCGGGAGCAGAAGGCAUGUGAUAACACAUGAGGAUCACCCAUGUAGUUAAGAUGGCA\
) def
/coor [
[80.72791290 199.49929810]
[80.17364502 184.50955200]
[79.61936951 169.51979065]
[79.06510162 154.53002930]
[78.51082611 139.54028320]
[77.95655060 124.55052185]
[69.36552429 112.25441742]
[55.48096085 106.57824707]
[41.59639740 100.90208435]
[27.71183205 95.22591400]
[13.82726669 89.54975128]
[3.59761834 99.48432922]
[-9.62273312 104.71133423]
[-23.79303932 104.45993042]
[-36.73970795 98.80220795]
[-46.48972321 88.63695526]
[-51.57130051 75.54705048]
[-51.23600006 61.55303955]
[-64.90133667 55.36769485]
[-78.56668091 49.18235016]
[-92.23201752 42.99700546]
[-105.89735413 36.81166077]
[-119.56269836 30.62631416]
[-133.22804260 24.44096947]
[-146.89337158 18.25562477]
[-163.81643677 17.23261070]
[-167.51815796 0.68771726]
[-152.64459229 -7.44943333]
[-140.70803833 4.59028530]
[-127.04269409 10.77563000]
[-113.37734985 16.96097374]
[-99.71201324 23.14632034]
[-86.04667664 29.33166504]
[-72.38133240 35.51700974]
[-58.71599197 41.70235443]
[-45.05065536 47.88769913]
[-33.10187912 37.44657135]
[-17.75547600 33.19072342]
[-2.02226830 36.00693130]
[10.98855972 45.38938522]
[18.68389320 59.52967453]
[19.50343323 75.66518402]
[33.38799667 81.34135437]
[47.27256393 87.01751709]
[61.15712738 92.69368744]
[75.04169464 98.36985016]
[86.11196899 81.43743134]
[104.67912292 79.16465759]
[117.25891113 90.86859894]
[132.19493103 89.48457336]
[147.13093567 88.10054779]
[162.06695557 86.71652222]
[176.97483826 85.05673218]
[191.84950256 83.12174225]
[206.72418213 81.18675232]
[221.59884644 79.25176239]
[236.47352600 77.31677246]
[244.81153870 73.01531219]
[251.93237305 75.59564209]
[266.86837769 74.21161652]
[279.93341064 64.30014801]
[294.94253540 70.90759277]
[296.45565796 87.23678589]
[282.91619873 96.48964691]
[268.25241089 89.14762878]
[253.31639099 90.53165436]
[238.40850830 92.19144440]
[223.53384399 94.12643433]
[208.65916443 96.06142426]
[193.78450012 97.99641418]
[178.90982056 99.93139648]
[172.53089905 104.01473999]
[163.45097351 101.65253448]
[148.51496887 103.03656006]
[133.57894897 104.42058563]
[118.64293671 105.80461121]
[110.51018524 119.63227081]
[92.94631195 123.99624634]
[93.50057983 138.98600769]
[94.05485535 153.97575378]
[94.60912323 168.96551514]
[95.16339874 183.95527649]
[95.71767426 198.94502258]
[98.61861420 218.10839844]
] def
/pairs [
[1 83]
[2 82]
[3 81]
[4 80]
[5 79]
[6 78]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[49 76]
[50 75]
[51 74]
[52 73]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
