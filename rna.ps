%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Sat Jul  8 18:25:02 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUUGUCAUCCAAGGAUAUUGUAAAAGGAGUGGGCAAGAAGGUGGAGAGCAUUGAUGAAGGUACACAUGAGGAUCACCCAUGUUC\
) def
/coor [
[60.83476639 127.54770660]
[52.98849869 109.09451294]
[53.38657761 89.04643250]
[39.50201416 83.37026978]
[25.61744881 77.69409943]
[11.18959045 83.56561279]
[-2.81047368 77.61138153]
[-8.31914806 63.82044220]
[-22.20371246 58.14427567]
[-36.08827972 52.46810913]
[-49.97284317 46.79194260]
[-60.20249176 56.72652054]
[-73.42284393 61.95352554]
[-87.59314728 61.70212555]
[-100.53981781 56.04440308]
[-110.28983307 45.87915039]
[-115.37140656 32.78924179]
[-115.03610992 18.79523087]
[-128.70144653 12.60988522]
[-142.36679077 6.42454052]
[-156.03213501 0.23919591]
[-168.06114197 9.70288944]
[-183.11241150 12.48101139]
[-197.72724915 7.93516827]
[-208.54730225 -2.89003682]
[-213.08619690 -17.50705147]
[-210.30090332 -32.55699539]
[-200.83148193 -44.58149719]
[-186.85392761 -50.81741714]
[-171.58018494 -49.83178329]
[-158.52005005 -41.85109329]
[-150.67465210 -28.70924568]
[-149.84678650 -13.42614365]
[-136.18144226 -7.24079895]
[-122.51610565 -1.05545425]
[-108.85076141 5.12989044]
[-96.90198517 -5.31123781]
[-81.55558777 -9.56708431]
[-65.82238007 -6.75087547]
[-52.81155014 2.63157654]
[-45.11621857 16.77186584]
[-44.29667664 32.90737915]
[-30.41211128 38.58354568]
[-16.52754784 44.25970840]
[-2.64298248 49.93587494]
[10.94921207 43.95358276]
[25.11099434 49.51222992]
[31.29361534 63.80953598]
[45.17818069 69.48570251]
[59.06274414 75.16186523]
[65.57122803 66.72161102]
[73.78550720 59.93016052]
[83.29860687 55.12400436]
[93.63919067 52.54126358]
[104.29492950 52.30990601]
[114.73786926 54.44139099]
[124.45060730 58.83011627]
[132.95191956 65.25863647]
[139.82060242 73.40844727]
[144.71635437 82.87575531]
[147.39657593 93.19149780]
[147.72851562 103.84457397]
[145.69569397 114.30716705]
[141.39884949 124.06090546]
[153.02690125 133.53657532]
[164.65496826 143.01223755]
[176.28302002 152.48789978]
[187.91108704 161.96356201]
[196.76600647 165.06445312]
[199.78526306 172.01055908]
[211.05523682 181.90943909]
[227.23402405 184.58877563]
[232.74897766 200.03279114]
[221.92677307 212.35398865]
[205.90037537 208.87738037]
[201.15637207 193.17941284]
[189.88639832 183.28054810]
[178.43542480 173.59162903]
[166.80735779 164.11595154]
[155.17930603 154.64028931]
[143.55123901 145.16462708]
[131.92318726 135.68896484]
[114.50982666 145.63174438]
[94.55189514 147.57215881]
] def
/pairs [
[3 50]
[4 49]
[5 48]
[8 45]
[9 44]
[10 43]
[11 42]
[18 36]
[19 35]
[20 34]
[21 33]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
